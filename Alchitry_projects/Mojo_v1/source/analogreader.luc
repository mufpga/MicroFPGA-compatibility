module analogreader (
    input clk,  // clock
    input rst,  // reset
    input sample[10],
    input sample_channel[4],
    input new_sample,
    output channel[4],
    output value[8][10]
  ) {
  
  // This is used to convert 0 to 7 to its corresponding channel 0 to 1 and 4 to 9
  const DIGIT_TO_CHANNEL = {4d9,4d8,4d7,4d6,4d5,4d4,4d1,4d0};
 
  // This is used to convert the sample channel to the corresponding LED
  // Most channels are invalid and will never be seen so we use 'x' as don't cares
  const CHANNEL_TO_LED = {4bx,4bx,4bx,4bx,4bx,4bx,4d7,4d6,4d5,4d4,4d3,4d2,4bx,4bx,4d1,4d0};
 .clk(clk){ 
    .rst(rst) {
      dff value_lib[8][10]; 
      dff ch[4];   
  }}
  
  always {
    channel = DIGIT_TO_CHANNEL[ch.q];                     // set the channel to sample
    value = value_lib.q;
    
    if (new_sample) {                                        // when there is a new sample
      value_lib.d[CHANNEL_TO_LED[sample_channel]] = sample;  
      ch.d = ch.q + 1;                                       // increment the channel we are sampling
      if (ch.q == 7)                                         // there are only 8 channels (0 to 7)
        ch.d = 0;                                            // restart at 0
    }
  }
}
